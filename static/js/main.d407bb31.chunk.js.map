{"version":3,"sources":["components/Header.js","components/Profile.js","components/Social.js","App.js","index.js"],"names":["Header","isDark","useColorMode","colorMode","useMediaQuery","isNotSmallerScreen","position","bg","opacity","w","h","alignSelf","direction","spacing","p","ml","fontSize","fontWeight","bgColor","bgClip","mt","colorScheme","onClick","window","open","mb","borderRadius","backgroundColor","boxShadow","boxSize","src","Profile","Social","App","toggleColorMode","size","color","icon","isRound","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"8OAkDeA,MA1Cf,WAEE,IACMC,EAAuB,SADPC,cAAdC,UAGR,EAA6BC,YAAc,qBAApCC,EAAP,oBAEA,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,SAAS,WAAWC,GAAG,WAAWC,QAAQ,MAAMC,EAAE,QAAQC,EAAE,QAAQC,UAAU,aACtF,eAAC,IAAD,CACEC,UAAWP,EAAqB,MAAQ,SACxCQ,QAAQ,QAAQC,EAAGT,EAAqB,KAAO,IAC/CM,UAAU,aAHZ,UAME,eAAC,IAAD,CAAKI,GAAIV,EAAqB,IAAM,KAAMM,UAAU,aAApD,UACE,cAAC,IAAD,CAAMK,SAAS,MAAMC,WAAW,WAAhC,sBACA,cAAC,IAAD,CACEC,QAAQ,WACRC,OAAO,OACPH,SAAS,MACTC,WAAW,OAJb,4BAQA,cAAC,IAAD,CAAMC,QAASjB,EAAS,WAAa,WAAYkB,OAAO,OAAxD,yPAKA,cAAC,IAAD,CAAQC,GAAI,EAAGC,YAAY,OAAOC,QAAS,kBAAMC,OAAOC,KAAK,sCAA7D,0BAEF,cAAC,IAAD,CAAOb,UAAU,SAASS,GAAIf,EAAqB,IAAM,KAAMoB,GAAIpB,EAAqB,IAAM,KAAMqB,aAAa,OAAOC,gBAAgB,cAAcC,UAAU,KAAKC,QAAQ,QAAQC,IAAI,kEChCpLC,MARf,WACE,OACE,yBCMWC,MARf,WACE,OACE,yBC0BWC,MAxBf,WAEE,MAAuC/B,cAA/BC,EAAR,EAAQA,UAAW+B,EAAnB,EAAmBA,gBACbjC,EAAuB,SAAdE,EAEf,OACE,eAAC,IAAD,CAAQW,EAAG,EAAX,UACE,eAAC,IAAD,CAAML,EAAE,OAAR,UACE,cAAC,IAAD,CAASM,GAAG,IAAIoB,KAAK,KAAKlB,WAAW,WAAWmB,MAAM,WAAtD,4BAGA,cAAC,IAAD,IACA,cAAC,IAAD,CAAYC,KAAO,cAAC,IAAD,IAAef,QAASY,EAAiBI,QAAQ,SACpE,cAAC,IAAD,CAAYvB,GAAI,EAAGsB,KAAO,cAAC,IAAD,IAAkBf,QAASY,EAAiBI,QAAQ,SAC9E,cAAC,IAAD,CAAYvB,GAAI,EAAGsB,KAAO,cAAC,IAAD,IAAiBf,QAASY,EAAiBI,QAAQ,SAC7E,cAAC,IAAD,CAAYvB,GAAI,EAAGsB,KAAOpC,EAAS,cAAC,IAAD,IAAY,cAAC,IAAD,IAAaqB,QAASY,EAAiBI,QAAQ,YAEhG,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCpBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBC,iBAAiB,SAClC,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.d407bb31.chunk.js","sourcesContent":["import { useColorMode } from '@chakra-ui/color-mode'\r\nimport { Box, Circle, Stack, Text } from '@chakra-ui/layout';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { useMediaQuery } from '@chakra-ui/media-query';\r\nimport { Flex } from '@chakra-ui/react';\r\nimport React from 'react'\r\n\r\nfunction Header() {\r\n\r\n  const { colorMode } = useColorMode();\r\n  const isDark = colorMode === \"dark\";\r\n\r\n  const [isNotSmallerScreen] = useMediaQuery(\"(min-width:600px)\")\r\n\r\n  return (\r\n    <div>\r\n      <Stack>\r\n        <Circle position=\"absolute\" bg=\"blue.100\" opacity=\"0.1\" w=\"300px\" h=\"300px\" alignSelf=\"flex-end\" />        \r\n        <Flex\r\n          direction={isNotSmallerScreen ? \"row\" : \"column\"}\r\n          spacing=\"200px\" p={isNotSmallerScreen ? \"32\" : \"8\"}\r\n          alignSelf=\"flex-start\"\r\n        >\r\n\r\n          <Box ml={isNotSmallerScreen ? \"0\" : \"16\"} alignSelf=\"flex-start\">\r\n            <Text fontSize=\"5xl\" fontWeight=\"semibold\">Hi, I am</Text>\r\n            <Text \r\n              bgColor=\"blue.200\" \r\n              bgClip=\"text\"\r\n              fontSize=\"7xl\" \r\n              fontWeight=\"bold\"               \r\n            >\r\n              Xybercommander\r\n            </Text>\r\n            <Text bgColor={isDark ? \"gray.200\" : \"gray.500\"} bgClip=\"text\">\r\n              Highly motivated self taught CS undergrad eager to learn new technologies to make\r\n              modern mobile and web applications. I am confident with my ability to provide\r\n              optimized code to make outstanding applications with the latest frameworks.\r\n            </Text>\r\n            <Button mt={8} colorScheme=\"blue\" onClick={() => window.open(\"https://github.com/xybercommander\")}>My Github</Button>\r\n          </Box>\r\n          <Image alignSelf=\"center\" mt={isNotSmallerScreen ? \"0\" : \"12\"} mb={isNotSmallerScreen ? \"0\" : \"12\"} borderRadius=\"full\" backgroundColor=\"transparent\" boxShadow=\"lg\" boxSize=\"300px\" src=\"https://avatars.githubusercontent.com/u/38849650?v=4\" />\r\n\r\n        </Flex>\r\n      </Stack>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nfunction Social() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Social\r\n","import { Spacer, VStack, Flex, Heading, IconButton , useColorMode} from \"@chakra-ui/react\";\nimport { FaSun, FaMoon, FaInstagram, FaGithub, FaLinkedin } from \"react-icons/fa\"\nimport Header from \"./components/Header\";\nimport Profile from \"./components/Profile\";\nimport Social from \"./components/Social\";\n\nfunction App() {\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n\n  return (\n    <VStack p={5}>\n      <Flex w=\"100%\">\n        <Heading ml=\"8\" size=\"md\" fontWeight=\"semibold\" color=\"cyan.400\">\n          Xybercommander\n        </Heading>  \n        <Spacer></Spacer>\n        <IconButton icon={ <FaGithub /> } onClick={toggleColorMode} isRound=\"true\"></IconButton>\n        <IconButton ml={2} icon={ <FaInstagram /> } onClick={toggleColorMode} isRound=\"true\"></IconButton>\n        <IconButton ml={2} icon={ <FaLinkedin /> } onClick={toggleColorMode} isRound=\"true\"></IconButton>\n        <IconButton ml={8} icon={ isDark ? <FaSun /> : <FaMoon /> } onClick={toggleColorMode} isRound=\"true\"></IconButton>\n      </Flex>\n      <Header></Header> \n      <Profile></Profile>\n      <Social></Social>\n    </VStack>\n  );\n}\n\nexport default App;\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode=\"dark\"></ColorModeScript>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}